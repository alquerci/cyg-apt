cache:
    - '%CYG_CACHE%'

matrix:
    allow_failures:
        -
            # cygwin+x86 python-2.7+x86 not work
            CYG_ARCH: x86
            PYTHON: 'C:\cygwin-%CYG_ARCH%\bin\python2.7.exe'
            PYTHON_PLATFORM: cygwin

environment:
    global:
        CYG_MIRROR: http://cygwin.parentingamerica.com
        CYG_SETUP: '%TMP%\cygwin-setup.exe'
        CYG_CACHE: 'C:\cygwin-%CYG_ARCH%\var\cache\setup'
        CYG_ROOT: 'C:\cygwin-%CYG_ARCH%'
        PYTHON: '%PYTHON_DIR%\python.exe'
        CYG_ENV: 'C:\cygwin-%CYG_ARCH%\bin\bash -lc "cd \"$OLDPWD\"; '

    matrix:
        -
            # cygwin+x64 python-2.7+x64
            CYG_ARCH: x86_64
            PYTHON: 'C:\cygwin-%CYG_ARCH%\bin\python2.7.exe'
            PYTHON_PLATFORM: cygwin
        -
            # cygwin+x64 wpython-2.7+x86
            CYG_ARCH: x86_64
            PYTHON_PLATFORM: win
            PYTHON_VERSION: 2.7
            PYTHON_ARCH: 32
            PYTHON_DIR: 'C:\Python27'
        -
            # cygwin+x64 wpython-2.7+x64
            CYG_ARCH: x86_64
            PYTHON_PLATFORM: win
            PYTHON_VERSION: 2.7
            PYTHON_ARCH: 64
            PYTHON_DIR: 'C:\Python27-x64'
        -
            # cygwin+x64 wpython-2.6+x86
            CYG_ARCH: x86_64
            PYTHON_PLATFORM: win
            PYTHON_VERSION: 2.6
            PYTHON_ARCH: 32
            PYTHON_DIR: 'C:\Python26'
        -
            # cygwin+x64 wpython-2.6+x64
            CYG_ARCH: x86_64
            PYTHON_PLATFORM: win
            PYTHON_VERSION: 2.6
            PYTHON_ARCH: 64
            PYTHON_DIR: 'C:\Python26-x64'
        -
            # cygwin+x86 wpython-2.6+x86
            CYG_ARCH: x86
            PYTHON_PLATFORM: win
            PYTHON_VERSION: 2.6
            PYTHON_ARCH: 32
            PYTHON_DIR: 'C:\Python26'
        -
            # cygwin+x86 wpython-2.6+x64
            CYG_ARCH: x86
            PYTHON_PLATFORM: win
            PYTHON_VERSION: 2.6
            PYTHON_ARCH: 64
            PYTHON_DIR: 'C:\Python26-x64'
        -
            # cygwin+x86 wpython-2.7+x86
            CYG_ARCH: x86
            PYTHON_PLATFORM: win
            PYTHON_VERSION: 2.7
            PYTHON_ARCH: 32
            PYTHON_DIR: 'C:\Python27'
        -
            # cygwin+x86 wpython-2.7+x64
            CYG_ARCH: x86
            PYTHON_PLATFORM: win
            PYTHON_VERSION: 2.7
            PYTHON_ARCH: 64
            PYTHON_DIR: 'C:\Python27-x64'
        -
            # cygwin+x86 python-2.7+x86 not work
            CYG_ARCH: x86
            PYTHON: 'C:\cygwin-%CYG_ARCH%\bin\python2.7.exe'
            PYTHON_PLATFORM: cygwin

init:
    - 'echo OS architecture: %PROCESSOR_ARCHITECTURE%'
    - 'echo Cygwin architecture: %CYG_ARCH%'
    - 'set CYG_SETUP=%CYG_SETUP%'
    - 'echo Cygwin setup.exe: %CYG_SETUP%'
    - 'set CYG_ROOT=%CYG_ROOT%'
    - 'echo Cygwin root directory: %CYG_ROOT%'
    - 'set CYG_CACHE=%CYG_CACHE%'
    - 'echo Cygwin cache directory: %CYG_CACHE%'
    - 'set CYG_ENV=%CYG_ENV%'
    - 'echo Cygwin executable environment: %CYG_ENV%'
    - 'set PYTHON=%PYTHON%'
    - 'echo PYTHON executable path: %PYTHON%'

# to install
#   - windows python version 2.6 arch x86 -> C:\Python26
#   - windows python version 2.6 arch x64 -> C:\Python26-x64
#   - cygwin arch x86 -> C:\cygwin-x86
#   - cygwin arch x86_64 -> C:\cygwin-x86_64

install:
    - 'if "win" == "%PYTHON_PLATFORM%" if not exist "%PYTHON%" powershell .\.appveyor\install.ps1'
    - 'if "2.6" == "%PYTHON_VERSION%" if not exist "%PYTHON_DIR%\Lib\site-packages\argparse.py" appveyor DownloadFile https://raw.githubusercontent.com/bewest/argparse/master/argparse.py -FileName "%PYTHON_DIR%\Lib\site-packages\argparse.py"'
    - 'if not exist "%CYG_SETUP%" appveyor DownloadFile http://cygwin.com/setup-x86_64.exe -FileName "%CYG_SETUP%"'
    - '"%CYG_SETUP%" -qnNdO -a "%CYG_ARCH%" -R "%CYG_ROOT%" -s "%CYG_MIRROR%" -l "%CYG_CACHE%" -P make -P python -P gnupg'
    - '%CYG_ENV% du -s `cygpath $CYG_CACHE` "'

before_build:
    - '%CYG_ENV% cygcheck -dc cygwin "'
    - '%PYTHON% --version'
    - '%PYTHON% -c "import sys; print(''Python architecture: {0}''.format(''x64'' if sys.maxsize > 2**32 else ''x86''))"'
    - '%PYTHON% -c "import sys; print(''Python platform: {0}''.format(sys.platform));"'

build_script:
    - '%CYG_ENV% make PYTHON=\"`cygpath $PYTHON`\" "'

test_script:
    - '%CYG_ENV% make test PYTHON=\"`cygpath $PYTHON`\" "'
    - '%CYG_ENV% make install "'
    - '%CYG_ENV% make installtest PYTHON=\"`cygpath $PYTHON`\" "'
    - 'REM test architecture detection'
    - ps: 'cp $env:CYG_ROOT\home\$env:USERNAME\.cyg-apt -destination $env:USERPROFILE'
    - 'type "%USERPROFILE%\.cyg-apt"'
    - '%CYG_ENV% mount "'
    - '%PYTHON% %CYG_ROOT%\bin\cyg-apt update -qX'
    - '"%CYG_SETUP%" -qnNdO -a "%CYG_ARCH%" -R "%CYG_ROOT%" -s "%CYG_MIRROR%" -l "%CYG_CACHE%" -P ping'
    - '%PYTHON% %CYG_ROOT%\bin\cyg-apt ball ping> ball~'
    - ps: 'Get-Content ball~ | set path; cmd /c $env:CYG_ROOT\bin\cygpath -w $path> ball~'
    - ps: 'Get-Content ball~'
    - ps: 'if (-not(Get-Content ball~ | Test-Path)) { Exit 1 }'
    - 'del ball~'
    - '"%CYG_SETUP%" -qnNdO -L -a "%CYG_ARCH%" -R "%CYG_ROOT%" -s "%CYG_MIRROR%" -l "%CYG_CACHE%" -x ping'
    - 'REM test install on long cwd'
    - 'for /L %%X in (0, 1, 45) do (mkdir %%X_d) & (cd %%X_d)'
    - 'cd'
    - '%PYTHON% %CYG_ROOT%\bin\cyg-apt -q install ping'
    - 'cd "%APPVEYOR_BUILD_FOLDER%"'
    - '"%CYG_SETUP%" -qnNdO -L -a "%CYG_ARCH%" -R "%CYG_ROOT%" -s "%CYG_MIRROR%" -l "%CYG_CACHE%" -x ping'
